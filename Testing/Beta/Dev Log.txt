DTD 3 DEV LOG:
This is a list of the main things that I want to do with the release of DTD 3.0.0

Please note that DTD v3.0.0 has reached it's feature freeze, so no more game-changing features are planned
for this particular release; it's now mostly just bugfixes and general cleanup.


TO DO:
Below you'll find a list of things that are currently in the works. The comments in [square brackets] are the current state of the implementation.

- Clean up legacy variables, rename them to better follow Python best practice.	[IN PROGRESS - WILL BE A MAJOR FOCUS IN THE NEXT FEATURE UPDATE]
- Add comments to the source code to make it easier to maintain. [IN PROGRESS]
- Integrate items into some sort of class system (objects with attributes rather than a bunch of random 
variables floating around in the code.)	[MOSTLY COMPLETE, NEEDS REFINEMENT]
	> Very nearly complete, still have to integrate it fully.
- Add descriptions for tracks in the Audio Player. [IN PROGRESS]
- Migrate in-game chests to the new search_chest function, and remove legacy code. [MOSTLY DONE]
- Re-implement release notes option when a new version is available [POSTPONED TO NEXT FEATURE UPDATE]
- Change how the game handles data files:
	> Rename some files to make them easier to identify [COMPLETE]
	> Locate data files in directories mto clean up the game's working directory [STARTED]


PROPOSED FEATURES THAT WERE REMOVED:
This is a list of features that were planned to be in the final release of DTD v3.0.0, but have been removed. Please note that this list is subject to change and these features could get re-added in future releases.

- Migrate the old self-hosted bug tracking system to Bugzilla. [CANCELLED - USE GITHUB ISSUE TRACKING INSTEAD]
- Add a "What's New?" option to the Advanced Settings menu, which acts as the changelog. [REMOVED - NOT NECESSARY]
- Add a Bug Report feature - if the game crashes, send reports (containing diagnostic data) via email or telegram to myself. [CANCELLED - the system worked but added more complexity, plus the Telegram API key used would be publicly available thanks to the open source license.)
- Add an autosave feature (Was implemented in early betas but was removed when porting the save system over to the new codebase. Might get added back in a future update.)


COMPLETED FEATURES / PATCHES:
Please note that this list isn't comprehensive; it's just additions effective from the writing of this list (2/2/24) - a full list of implementations can be found in the changelog.

- Migrated the save/load menus over to the new save system.
- Changed save format to better reflect the game's new codebase.
- Tied the legacy SavePoint variable to a Player attribute.
- Categorised the inventory into a dictionary, which is a Player attribute.
- Items are now in a class along with their artwork and descriptions, which hugely tidies up the code.
- Battles are now completely migrated over to the new system.
- Prompt is now shown to convert an incompatible save file.
- Depreciated the following legacy battle logic functions:
	> MusicBattle, JuniperMusic, encounterGuard, encounterHighRank, encounterJuniper
- Added some descriptions to songs in the Audio Player.
- Defensive items (such as weapons obtained by defeating enemies) are now stored as an array, which is an
attribute of the Player class. 
- Fully implement Expert Mode. [COMPLETE - REQUIRES TESTING]
- Complete the removal of obsoleted features:
	> Windows Themes [DONE]
	> Save Data Recovery Utility, backup save file creation [DONE]
- Fix the battle system; finish migrating enemies over to a native class system. [COMPLETE - REQUIRES TESTING]
- Update Save Data Conversion Utility to support new save format. [DONE]
- Auto updates are now initiated in a more controlled way.
- Re-write the update system from scratch, which brings many benefits:
	> The Windows version of the game updates through a standalone program, which downloads the latest version's .exe file directly from GitHub, and overwrites the older version with this data. This has many benefits such as way faster downloads as well as being a true in-place upgrade (wasn't how it worked before.)
	> The Source Code version now lets you save to a custom directory rather than forcing you to use ~/Downloads.
- Re-worked the 'Refresh' option to avoid issues which may have led to mass file deletion and data loss in the Source Code version (not ideal!)
- Re-wrote the update system from scratch:
	> Only check for updates every 3 days to avoid issues when starting the game with an unstable internet connection.
	> Host the latest stable version on GitHub - depreciate the old update server in the near future.


KNOWN BUGS:
(This list is specific to the current beta; a full list of bugfixes for DTD v3.0.0 can be found in the changelog.)

Key- [x] = A patch for this bug has been implemented.
   - [] = I am aware of the bug, but have not yet patched it.

- 'Never ask for overwrite confirmation' option currently doesn't work. []
- Some formatting bugs during battles. []
- 'Erase save data' option returns to the main Options screen, instead of the Advanced screen as expected. [x]
- When Basic Graphics is enabled, the game still thinks the Flow theme is active if you enter the Themes menu. [x]
- Some crashes assosiated with playing under a previously converted save file. [x]
- Some menu titles aren't rendered when Basic Graphics or Classic Theme is enabled. [x]
- Converted save data returns 'None' for defensive_items, leading to crashes. []
- Trying to exit the inventory during the Juniper boss fight causes the Smokescreen to be used, and the player is warped back to Chapter 2. [x]
- Entering an invalid integer on the 'New version available' screen causes the game to quit abrubtly. []
- Player held items are formatted strangely when using the 'Examine' option duirng battles. [x]
- The message shown when the user manually checks for updates when there are no new versions available is duplicated. [x]
- During the first battle in the game, using the 'Examine' option shows 'No defensive items held'. []
